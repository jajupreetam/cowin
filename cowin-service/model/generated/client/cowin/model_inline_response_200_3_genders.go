/*
 * Co-WIN Protected APIs
 *
 * Co-WIN APIs to register for vaccination, to book a vaccination appointment from partner applications. These APIs have restricted access. You can test these APIs on the Test Server using API Key -  <code>3sjOr2rmM52GzhpMHjDEE1kpQeRxwFDr4YcBEimi</code> Please contact Ministry of Health and Family Welfare, Government of India to get access to these APIs. [<i>Updated on 03 May 2021</i>]
 *
 * API version: 2.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cowin

import (
	"encoding/json"
)

// InlineResponse2003Genders struct for InlineResponse2003Genders
type InlineResponse2003Genders struct {
	Gender string `json:"gender"`
	// Gender in preferred language as specified in Accept-Language header parameter.
	GenderL *string `json:"gender_l,omitempty"`
	Id float32 `json:"id"`
}

// NewInlineResponse2003Genders instantiates a new InlineResponse2003Genders object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2003Genders(gender string, id float32, ) *InlineResponse2003Genders {
	this := InlineResponse2003Genders{}
	this.Gender = gender
	this.Id = id
	return &this
}

// NewInlineResponse2003GendersWithDefaults instantiates a new InlineResponse2003Genders object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2003GendersWithDefaults() *InlineResponse2003Genders {
	this := InlineResponse2003Genders{}
	return &this
}

// GetGender returns the Gender field value
func (o *InlineResponse2003Genders) GetGender() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Gender
}

// GetGenderOk returns a tuple with the Gender field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003Genders) GetGenderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Gender, true
}

// SetGender sets field value
func (o *InlineResponse2003Genders) SetGender(v string) {
	o.Gender = v
}

// GetGenderL returns the GenderL field value if set, zero value otherwise.
func (o *InlineResponse2003Genders) GetGenderL() string {
	if o == nil || o.GenderL == nil {
		var ret string
		return ret
	}
	return *o.GenderL
}

// GetGenderLOk returns a tuple with the GenderL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2003Genders) GetGenderLOk() (*string, bool) {
	if o == nil || o.GenderL == nil {
		return nil, false
	}
	return o.GenderL, true
}

// HasGenderL returns a boolean if a field has been set.
func (o *InlineResponse2003Genders) HasGenderL() bool {
	if o != nil && o.GenderL != nil {
		return true
	}

	return false
}

// SetGenderL gets a reference to the given string and assigns it to the GenderL field.
func (o *InlineResponse2003Genders) SetGenderL(v string) {
	o.GenderL = &v
}

// GetId returns the Id field value
func (o *InlineResponse2003Genders) GetId() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003Genders) GetIdOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InlineResponse2003Genders) SetId(v float32) {
	o.Id = v
}

func (o InlineResponse2003Genders) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["gender"] = o.Gender
	}
	if o.GenderL != nil {
		toSerialize["gender_l"] = o.GenderL
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2003Genders struct {
	value *InlineResponse2003Genders
	isSet bool
}

func (v NullableInlineResponse2003Genders) Get() *InlineResponse2003Genders {
	return v.value
}

func (v *NullableInlineResponse2003Genders) Set(val *InlineResponse2003Genders) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2003Genders) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2003Genders) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2003Genders(val *InlineResponse2003Genders) *NullableInlineResponse2003Genders {
	return &NullableInlineResponse2003Genders{value: val, isSet: true}
}

func (v NullableInlineResponse2003Genders) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2003Genders) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
