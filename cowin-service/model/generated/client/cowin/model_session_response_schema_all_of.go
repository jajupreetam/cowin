/*
 * Co-WIN Protected APIs
 *
 * Co-WIN APIs to register for vaccination, to book a vaccination appointment from partner applications. These APIs have restricted access. You can test these APIs on the Test Server using API Key -  <code>3sjOr2rmM52GzhpMHjDEE1kpQeRxwFDr4YcBEimi</code> Please contact Ministry of Health and Family Welfare, Government of India to get access to these APIs. [<i>Updated on 03 May 2021</i>]
 *
 * API version: 2.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cowin

import (
	"encoding/json"
)

// SessionResponseSchemaAllOf struct for SessionResponseSchemaAllOf
type SessionResponseSchemaAllOf struct {
	Fee string `json:"fee"`
	SessionId string `json:"session_id"`
	Date string `json:"date"`
	AvailableCapacity float32 `json:"available_capacity"`
	MinAgeLimit float32 `json:"min_age_limit"`
	Vaccine string `json:"vaccine"`
	// Array of slot names
	Slots []string `json:"slots"`
}

// NewSessionResponseSchemaAllOf instantiates a new SessionResponseSchemaAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionResponseSchemaAllOf(fee string, sessionId string, date string, availableCapacity float32, minAgeLimit float32, vaccine string, slots []string, ) *SessionResponseSchemaAllOf {
	this := SessionResponseSchemaAllOf{}
	this.Fee = fee
	this.SessionId = sessionId
	this.Date = date
	this.AvailableCapacity = availableCapacity
	this.MinAgeLimit = minAgeLimit
	this.Vaccine = vaccine
	this.Slots = slots
	return &this
}

// NewSessionResponseSchemaAllOfWithDefaults instantiates a new SessionResponseSchemaAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionResponseSchemaAllOfWithDefaults() *SessionResponseSchemaAllOf {
	this := SessionResponseSchemaAllOf{}
	return &this
}

// GetFee returns the Fee field value
func (o *SessionResponseSchemaAllOf) GetFee() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *SessionResponseSchemaAllOf) GetFeeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *SessionResponseSchemaAllOf) SetFee(v string) {
	o.Fee = v
}

// GetSessionId returns the SessionId field value
func (o *SessionResponseSchemaAllOf) GetSessionId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value
// and a boolean to check if the value has been set.
func (o *SessionResponseSchemaAllOf) GetSessionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SessionId, true
}

// SetSessionId sets field value
func (o *SessionResponseSchemaAllOf) SetSessionId(v string) {
	o.SessionId = v
}

// GetDate returns the Date field value
func (o *SessionResponseSchemaAllOf) GetDate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *SessionResponseSchemaAllOf) GetDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *SessionResponseSchemaAllOf) SetDate(v string) {
	o.Date = v
}

// GetAvailableCapacity returns the AvailableCapacity field value
func (o *SessionResponseSchemaAllOf) GetAvailableCapacity() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.AvailableCapacity
}

// GetAvailableCapacityOk returns a tuple with the AvailableCapacity field value
// and a boolean to check if the value has been set.
func (o *SessionResponseSchemaAllOf) GetAvailableCapacityOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AvailableCapacity, true
}

// SetAvailableCapacity sets field value
func (o *SessionResponseSchemaAllOf) SetAvailableCapacity(v float32) {
	o.AvailableCapacity = v
}

// GetMinAgeLimit returns the MinAgeLimit field value
func (o *SessionResponseSchemaAllOf) GetMinAgeLimit() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.MinAgeLimit
}

// GetMinAgeLimitOk returns a tuple with the MinAgeLimit field value
// and a boolean to check if the value has been set.
func (o *SessionResponseSchemaAllOf) GetMinAgeLimitOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MinAgeLimit, true
}

// SetMinAgeLimit sets field value
func (o *SessionResponseSchemaAllOf) SetMinAgeLimit(v float32) {
	o.MinAgeLimit = v
}

// GetVaccine returns the Vaccine field value
func (o *SessionResponseSchemaAllOf) GetVaccine() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Vaccine
}

// GetVaccineOk returns a tuple with the Vaccine field value
// and a boolean to check if the value has been set.
func (o *SessionResponseSchemaAllOf) GetVaccineOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Vaccine, true
}

// SetVaccine sets field value
func (o *SessionResponseSchemaAllOf) SetVaccine(v string) {
	o.Vaccine = v
}

// GetSlots returns the Slots field value
func (o *SessionResponseSchemaAllOf) GetSlots() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.Slots
}

// GetSlotsOk returns a tuple with the Slots field value
// and a boolean to check if the value has been set.
func (o *SessionResponseSchemaAllOf) GetSlotsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Slots, true
}

// SetSlots sets field value
func (o *SessionResponseSchemaAllOf) SetSlots(v []string) {
	o.Slots = v
}

func (o SessionResponseSchemaAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fee"] = o.Fee
	}
	if true {
		toSerialize["session_id"] = o.SessionId
	}
	if true {
		toSerialize["date"] = o.Date
	}
	if true {
		toSerialize["available_capacity"] = o.AvailableCapacity
	}
	if true {
		toSerialize["min_age_limit"] = o.MinAgeLimit
	}
	if true {
		toSerialize["vaccine"] = o.Vaccine
	}
	if true {
		toSerialize["slots"] = o.Slots
	}
	return json.Marshal(toSerialize)
}

type NullableSessionResponseSchemaAllOf struct {
	value *SessionResponseSchemaAllOf
	isSet bool
}

func (v NullableSessionResponseSchemaAllOf) Get() *SessionResponseSchemaAllOf {
	return v.value
}

func (v *NullableSessionResponseSchemaAllOf) Set(val *SessionResponseSchemaAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionResponseSchemaAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionResponseSchemaAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionResponseSchemaAllOf(val *SessionResponseSchemaAllOf) *NullableSessionResponseSchemaAllOf {
	return &NullableSessionResponseSchemaAllOf{value: val, isSet: true}
}

func (v NullableSessionResponseSchemaAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionResponseSchemaAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
