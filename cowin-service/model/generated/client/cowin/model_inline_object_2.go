/*
 * Co-WIN Protected APIs
 *
 * Co-WIN APIs to register for vaccination, to book a vaccination appointment from partner applications. These APIs have restricted access. You can test these APIs on the Test Server using API Key -  <code>3sjOr2rmM52GzhpMHjDEE1kpQeRxwFDr4YcBEimi</code> Please contact Ministry of Health and Family Welfare, Government of India to get access to these APIs. [<i>Updated on 03 May 2021</i>]
 *
 * API version: 2.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cowin

import (
	"encoding/json"
)

// InlineObject2 struct for InlineObject2
type InlineObject2 struct {
	Name string `json:"name"`
	// Year of birth in YYYY format
	BirthYear string `json:"birth_year"`
	GenderId *float32 `json:"gender_id,omitempty"`
	PhotoIdType float32 `json:"photo_id_type"`
	// Last 4 digits of photo id number
	PhotoIdNumber string `json:"photo_id_number"`
	// Comorbidity indicator. Default value is N.
	ComorbidityInd *string `json:"comorbidity_ind,omitempty"`
	ConsentVersion string `json:"consent_version"`
}

// NewInlineObject2 instantiates a new InlineObject2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject2(name string, birthYear string, photoIdType float32, photoIdNumber string, consentVersion string, ) *InlineObject2 {
	this := InlineObject2{}
	this.Name = name
	this.BirthYear = birthYear
	this.PhotoIdType = photoIdType
	this.PhotoIdNumber = photoIdNumber
	this.ConsentVersion = consentVersion
	return &this
}

// NewInlineObject2WithDefaults instantiates a new InlineObject2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject2WithDefaults() *InlineObject2 {
	this := InlineObject2{}
	return &this
}

// GetName returns the Name field value
func (o *InlineObject2) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineObject2) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineObject2) SetName(v string) {
	o.Name = v
}

// GetBirthYear returns the BirthYear field value
func (o *InlineObject2) GetBirthYear() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.BirthYear
}

// GetBirthYearOk returns a tuple with the BirthYear field value
// and a boolean to check if the value has been set.
func (o *InlineObject2) GetBirthYearOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BirthYear, true
}

// SetBirthYear sets field value
func (o *InlineObject2) SetBirthYear(v string) {
	o.BirthYear = v
}

// GetGenderId returns the GenderId field value if set, zero value otherwise.
func (o *InlineObject2) GetGenderId() float32 {
	if o == nil || o.GenderId == nil {
		var ret float32
		return ret
	}
	return *o.GenderId
}

// GetGenderIdOk returns a tuple with the GenderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject2) GetGenderIdOk() (*float32, bool) {
	if o == nil || o.GenderId == nil {
		return nil, false
	}
	return o.GenderId, true
}

// HasGenderId returns a boolean if a field has been set.
func (o *InlineObject2) HasGenderId() bool {
	if o != nil && o.GenderId != nil {
		return true
	}

	return false
}

// SetGenderId gets a reference to the given float32 and assigns it to the GenderId field.
func (o *InlineObject2) SetGenderId(v float32) {
	o.GenderId = &v
}

// GetPhotoIdType returns the PhotoIdType field value
func (o *InlineObject2) GetPhotoIdType() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.PhotoIdType
}

// GetPhotoIdTypeOk returns a tuple with the PhotoIdType field value
// and a boolean to check if the value has been set.
func (o *InlineObject2) GetPhotoIdTypeOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PhotoIdType, true
}

// SetPhotoIdType sets field value
func (o *InlineObject2) SetPhotoIdType(v float32) {
	o.PhotoIdType = v
}

// GetPhotoIdNumber returns the PhotoIdNumber field value
func (o *InlineObject2) GetPhotoIdNumber() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PhotoIdNumber
}

// GetPhotoIdNumberOk returns a tuple with the PhotoIdNumber field value
// and a boolean to check if the value has been set.
func (o *InlineObject2) GetPhotoIdNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PhotoIdNumber, true
}

// SetPhotoIdNumber sets field value
func (o *InlineObject2) SetPhotoIdNumber(v string) {
	o.PhotoIdNumber = v
}

// GetComorbidityInd returns the ComorbidityInd field value if set, zero value otherwise.
func (o *InlineObject2) GetComorbidityInd() string {
	if o == nil || o.ComorbidityInd == nil {
		var ret string
		return ret
	}
	return *o.ComorbidityInd
}

// GetComorbidityIndOk returns a tuple with the ComorbidityInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject2) GetComorbidityIndOk() (*string, bool) {
	if o == nil || o.ComorbidityInd == nil {
		return nil, false
	}
	return o.ComorbidityInd, true
}

// HasComorbidityInd returns a boolean if a field has been set.
func (o *InlineObject2) HasComorbidityInd() bool {
	if o != nil && o.ComorbidityInd != nil {
		return true
	}

	return false
}

// SetComorbidityInd gets a reference to the given string and assigns it to the ComorbidityInd field.
func (o *InlineObject2) SetComorbidityInd(v string) {
	o.ComorbidityInd = &v
}

// GetConsentVersion returns the ConsentVersion field value
func (o *InlineObject2) GetConsentVersion() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ConsentVersion
}

// GetConsentVersionOk returns a tuple with the ConsentVersion field value
// and a boolean to check if the value has been set.
func (o *InlineObject2) GetConsentVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConsentVersion, true
}

// SetConsentVersion sets field value
func (o *InlineObject2) SetConsentVersion(v string) {
	o.ConsentVersion = v
}

func (o InlineObject2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["birth_year"] = o.BirthYear
	}
	if o.GenderId != nil {
		toSerialize["gender_id"] = o.GenderId
	}
	if true {
		toSerialize["photo_id_type"] = o.PhotoIdType
	}
	if true {
		toSerialize["photo_id_number"] = o.PhotoIdNumber
	}
	if o.ComorbidityInd != nil {
		toSerialize["comorbidity_ind"] = o.ComorbidityInd
	}
	if true {
		toSerialize["consent_version"] = o.ConsentVersion
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject2 struct {
	value *InlineObject2
	isSet bool
}

func (v NullableInlineObject2) Get() *InlineObject2 {
	return v.value
}

func (v *NullableInlineObject2) Set(val *InlineObject2) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject2) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject2(val *InlineObject2) *NullableInlineObject2 {
	return &NullableInlineObject2{value: val, isSet: true}
}

func (v NullableInlineObject2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
