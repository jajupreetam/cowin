/*
 * Co-WIN Protected APIs
 *
 * Co-WIN APIs to register for vaccination, to book a vaccination appointment from partner applications. These APIs have restricted access. You can test these APIs on the Test Server using API Key -  <code>3sjOr2rmM52GzhpMHjDEE1kpQeRxwFDr4YcBEimi</code> Please contact Ministry of Health and Family Welfare, Government of India to get access to these APIs. [<i>Updated on 03 May 2021</i>]
 *
 * API version: 2.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cowin

import (
	"encoding/json"
)

// InlineResponse2005Districts struct for InlineResponse2005Districts
type InlineResponse2005Districts struct {
	StateId *float32 `json:"state_id,omitempty"`
	DistrictId float32 `json:"district_id"`
	DistrictName string `json:"district_name"`
	// District name in preferred language as specified in Accept-Language header parameter.
	DistrictNameL *string `json:"district_name_l,omitempty"`
}

// NewInlineResponse2005Districts instantiates a new InlineResponse2005Districts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2005Districts(districtId float32, districtName string, ) *InlineResponse2005Districts {
	this := InlineResponse2005Districts{}
	this.DistrictId = districtId
	this.DistrictName = districtName
	return &this
}

// NewInlineResponse2005DistrictsWithDefaults instantiates a new InlineResponse2005Districts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2005DistrictsWithDefaults() *InlineResponse2005Districts {
	this := InlineResponse2005Districts{}
	return &this
}

// GetStateId returns the StateId field value if set, zero value otherwise.
func (o *InlineResponse2005Districts) GetStateId() float32 {
	if o == nil || o.StateId == nil {
		var ret float32
		return ret
	}
	return *o.StateId
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2005Districts) GetStateIdOk() (*float32, bool) {
	if o == nil || o.StateId == nil {
		return nil, false
	}
	return o.StateId, true
}

// HasStateId returns a boolean if a field has been set.
func (o *InlineResponse2005Districts) HasStateId() bool {
	if o != nil && o.StateId != nil {
		return true
	}

	return false
}

// SetStateId gets a reference to the given float32 and assigns it to the StateId field.
func (o *InlineResponse2005Districts) SetStateId(v float32) {
	o.StateId = &v
}

// GetDistrictId returns the DistrictId field value
func (o *InlineResponse2005Districts) GetDistrictId() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.DistrictId
}

// GetDistrictIdOk returns a tuple with the DistrictId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2005Districts) GetDistrictIdOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DistrictId, true
}

// SetDistrictId sets field value
func (o *InlineResponse2005Districts) SetDistrictId(v float32) {
	o.DistrictId = v
}

// GetDistrictName returns the DistrictName field value
func (o *InlineResponse2005Districts) GetDistrictName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DistrictName
}

// GetDistrictNameOk returns a tuple with the DistrictName field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2005Districts) GetDistrictNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DistrictName, true
}

// SetDistrictName sets field value
func (o *InlineResponse2005Districts) SetDistrictName(v string) {
	o.DistrictName = v
}

// GetDistrictNameL returns the DistrictNameL field value if set, zero value otherwise.
func (o *InlineResponse2005Districts) GetDistrictNameL() string {
	if o == nil || o.DistrictNameL == nil {
		var ret string
		return ret
	}
	return *o.DistrictNameL
}

// GetDistrictNameLOk returns a tuple with the DistrictNameL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2005Districts) GetDistrictNameLOk() (*string, bool) {
	if o == nil || o.DistrictNameL == nil {
		return nil, false
	}
	return o.DistrictNameL, true
}

// HasDistrictNameL returns a boolean if a field has been set.
func (o *InlineResponse2005Districts) HasDistrictNameL() bool {
	if o != nil && o.DistrictNameL != nil {
		return true
	}

	return false
}

// SetDistrictNameL gets a reference to the given string and assigns it to the DistrictNameL field.
func (o *InlineResponse2005Districts) SetDistrictNameL(v string) {
	o.DistrictNameL = &v
}

func (o InlineResponse2005Districts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StateId != nil {
		toSerialize["state_id"] = o.StateId
	}
	if true {
		toSerialize["district_id"] = o.DistrictId
	}
	if true {
		toSerialize["district_name"] = o.DistrictName
	}
	if o.DistrictNameL != nil {
		toSerialize["district_name_l"] = o.DistrictNameL
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2005Districts struct {
	value *InlineResponse2005Districts
	isSet bool
}

func (v NullableInlineResponse2005Districts) Get() *InlineResponse2005Districts {
	return v.value
}

func (v *NullableInlineResponse2005Districts) Set(val *InlineResponse2005Districts) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2005Districts) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2005Districts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2005Districts(val *InlineResponse2005Districts) *NullableInlineResponse2005Districts {
	return &NullableInlineResponse2005Districts{value: val, isSet: true}
}

func (v NullableInlineResponse2005Districts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2005Districts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
